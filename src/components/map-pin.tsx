"use client";

import React, { useRef } from 'react';

interface MapPinProps {
    lat: number;
    lon: number;
    setLat: (lat: string) => void;
    setLon: (lon: string) => void;
}

// A simple SVG world map.
const WorldMapSvg = () => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 500" className="w-full h-full" preserveAspectRatio="xMidYMid meet">
        <path d="M999 243L984 241L980 250L963 252L960 258L954 257L946 257L938 259L929 257L924 255L917 254L910 254L903 254L897 254L894 251L887 250L882, 248L876, 245L872, 239L867, 238L863, 236L860, 232L857, 227L854, 221L852, 212L850, 203L849, 197L849, 189L847, 183L843, 179L841, 174L838, 172L831, 169L823, 167L817, 166L810, 166L804, 165L798, 161L795, 158L792, 155L790, 150L787, 146L784, 142L782, 137L780, 132L778, 128L777, 123L776, 118L775, 113L774, 108L774, 104L774, 99L774, 94L774, 89L775, 85L776, 80L778, 76L780, 71L783, 67L786, 62L790, 58L794, 54L798, 51L802, 47L807, 44L812, 41L817, 39L822, 36L827, 34L832, 32L837, 30L842, 29L847, 28L852, 27L857, 26L862, 26L867, 26L872, 26L877, 27L882, 28L887, 29L892, 31L897, 33L902, 36L907, 39L912, 42L917, 46L922, 50L927, 54L932, 59L937, 63L942, 68L947, 73L952, 78L957, 84L962, 89L967, 95L972, 101L977, 107L982, 113L987, 119L992, 125L997, 132L999, 135L999, 243M495, 243L493, 249L493, 252L496, 257L496, 260L493, 263L489, 263L485, 261L480, 260L477, 263L474, 266L470, 267L465, 267L461, 265L459, 261L458, 256L456, 252L454, 249L451, 247L448, 244L445, 242L441, 240L437, 238L433, 237L429, 235L425, 234L421, 232L417, 231L413, 229L409, 227L405, 226L401, 224L397, 222L393, 220L389, 218L385, 217L381, 215L377, 213L373, 211L369, 209L365, 207L361, 205L357, 203L353, 201L349, 200L345, 198L341, 196L337, 194L333, 192L329, 190L325, 188L321, 186L317, 184L313, 182L309, 180L305, 178L301, 177L297, 175L293, 173L289, 171L285, 169L281, 167L277, 165L273, 163L269, 161L265, 159L261, 157L257, 155L253, 153L249, 151L245, 149L241, 147L237, 145L233, 143L229, 141L225, 139L221, 137L217, 135L213, 133L209, 131L205, 129L201, 127L197, 125L193, 123L189, 121L185, 119L181, 117L177, 115L173, 113L169, 111L165, 109L161, 107L157, 105L153, 103L149, 101L145, 99L141, 97L137, 95L133, 93L129, 91L125, 89L121, 87L117, 85L113, 83L109, 81L105, 79L101, 77L97, 75L93, 73L89, 71L85, 69L81, 67L77, 65L73, 63L69, 61L65, 59L61, 57L57, 55L53, 53L49, 51L45, 49L41, 47L37, 45L33, 43L29, 41L25, 39L21, 37L17, 35L13, 33L9, 31L5, 29L1, 27L0, 27L0, 241L4, 241L8, 241L12, 242L16, 242L20, 242L24, 242L28, 242L32, 242L36, 242L40, 242L44, 242L48, 242L52, 242L56, 242L60, 242L64, 242L68, 242L72, 242L76, 242L80, 242L84, 242L88, 242L92, 242L96, 242L100, 242L104, 242L108, 242L112, 242L116, 242L120, 242L124, 242L128, 242L132, 242L136, 242L140, 242L144, 242L148, 242L152, 242L156, 242L160, 242L164, 242L168, 242L172, 242L176, 242L180, 242L184, 242L188, 242L192, 242L196, 242L200, 242L204, 242L208, 242L212, 242L216, 242L220, 242L224, 242L228, 242L232, 242L236, 242L240, 242L244, 242L248, 242L252, 242L256, 242L258, 244L260, 247L263, 249L265, 252L267, 255L269, 259L271, 262L273, 265L275, 268L277, 271L279, 274L281, 277L283, 280L285, 283L287, 286L289, 289L291, 292L293, 295L295, 298L297, 301L299, 304L301, 307L303, 310L305, 313L307, 316L309, 319L311, 322L313, 325L315, 328L317, 331L319, 334L321, 337L323, 340L325, 343L327, 346L329, 349L331, 352L333, 355L335, 358L337, 361L339, 364L341, 367L343, 370L345, 373L347, 376L349, 379L351, 382L353, 385L355, 388L357, 391L359, 394L361, 397L363, 400L365, 403L367, 406L369, 409L371, 412L373, 415L375, 418L377, 421L379, 424L381, 427L383, 430L385, 433L387, 436L389, 439L391, 442L393, 445L395, 448L397, 451L399, 454L401, 457L403, 460L405, 463L407, 466L409, 469L411, 472L413, 475L415, 478L417, 481L419, 484L421, 487L423, 490L425, 493L427, 496L429, 499L431, 499L434, 499L438, 496L441, 493L443, 490L444, 485L445, 481L447, 478L448, 474L450, 471L451, 468L452, 465L453, 462L454, 459L455, 456L456, 453L457, 450L458, 447L459, 444L460, 441L461, 438L462, 435L463, 432L464, 429L465, 426L466, 423L467, 420L468, 417L469, 414L470, 411L471, 408L472, 405L473, 402L474, 399L475, 396L476, 393L477, 390L478, 387L479, 384L480, 381L481, 378L482, 375L483, 372L484, 369L485, 366L486, 363L487, 360L488, 357L489, 354L490, 351L491, 348L492, 345L493, 342L494, 339L495, 336L496, 333L497, 330L498, 327L499, 324L500, 321L500, 266L498, 263L496, 260L495, 256L495, 243M500, 266L501, 321L502, 324L503, 327L504, 330L505, 333L506, 336L507, 339L508, 342L509, 345L510, 348L511, 351L512, 354L513, 357L514, 360L515, 363L516, 366L517, 369L518, 372L519, 375L520, 378L521, 381L522, 384L523, 387L524, 390L525, 393L526, 396L527, 399L528, 402L529, 405L530, 408L531, 411L532, 414L533, 417L534, 420L535, 423L536, 426L537, 429L538, 432L539, 435L540, 438L541, 441L542, 444L543, 447L544, 450L545, 453L546, 456L547, 459L548, 462L549, 465L550, 468L551, 471L552, 474L553, 477L554, 480L555, 483L556, 486L557, 489L558, 492L559, 495L560, 498L561, 500L565, 500L568, 497L570, 494L572, 491L573, 487L575, 484L576, 481L577, 478L578, 475L579, 472L580, 469L581, 466L582, 463L583, 460L584, 457L585, 454L586, 451L587, 448L588, 445L589, 442L590, 439L591, 436L592, 433L593, 430L594, 427L595, 424L596, 421L597, 418L598, 415L599, 412L600, 409L601, 406L602, 403L603, 400L604, 397L605, 394L606, 391L607, 388L608, 385L609, 382L610, 379L611, 376L612, 373L613, 370L614, 367L615, 364L616, 361L617, 358L618, 355L619, 352L620, 349L621, 346L622, 343L623, 340L624, 337L625, 334L626, 331L627, 328L628, 325L629, 322L630, 319L631, 316L632, 313L633, 310L634, 307L635, 304L636, 301L637, 298L638, 295L639, 292L640, 289L641, 286L642, 283L643, 280L644, 277L645, 274L646, 271L647, 268L648, 265L649, 262L650, 259L651, 256L652, 253L653, 250L654, 247L655, 244L656, 241L657, 238L658, 235L659, 232L660, 229L661, 226L662, 223L663, 220L664, 217L665, 214L666, 211L667, 208L668, 205L669, 202L670, 199L671, 196L672, 193L673, 190L674, 187L675, 184L676, 181L677, 178L678, 175L679, 172L680, 169L681, 166L682, 163L683, 160L684, 157L685, 154L686, 151L687, 148L688, 145L689, 142L690, 139L691, 136L692, 133L693, 130L694, 127L695, 124L696, 121L697, 118L698, 115L699, 112L700, 109L701, 106L702, 103L703, 100L704, 97L705, 94L706, 91L707, 88L708, 85L709, 82L710, 79L711, 76L712, 73L713, 70L714, 67L715, 64L716, 61L717, 58L718, 55L719, 52L720, 49L721, 46L722, 43L723, 40L724, 37L725, 34L726, 31L727, 28L728, 25L729, 22L730, 19L731, 16L732, 13L733, 10L734, 7L735, 4L736, 1L737, 0L739, 0L742, 2L745, 5L748, 8L751, 11L754, 14L757, 17L760, 20L763, 23L766, 26L769, 29L772, 32L775, 35L778, 38L781, 41L784, 44L787, 47L790, 50L793, 53L796, 56L799, 59L802, 62L805, 65L808, 68L811, 71L814, 74L817, 77L820, 80L823, 83L826, 86L829, 89L832, 92L835, 95L838, 98L841, 101L844, 104L847, 107L850, 110L853, 113L856, 116L859, 119L862, 122L865, 125L868, 128L871, 131L874, 134L877, 137L880, 140L883, 143L886, 146L889, 149L892, 152L895, 155L898, 158L901, 161L904, 164L907, 167L910, 170L913, 173L916, 176L919, 179L922, 182L925, 185L928, 188L931, 191L934, 194L937, 197L940, 200L943, 203L946, 206L949, 209L952, 212L955, 215L958, 218L961, 221L964, 224L967, 227L970, 230L973, 233L976, 236L979, 239L982, 242L984, 243L987, 245L990, 246L993, 247L996, 247L999, 248L999, 243L996, 243L992, 244L989, 244L985, 243L982, 243L978, 243L975, 243L971, 243L968, 243L964, 243L961, 243L957, 243L954, 243L950, 243L947, 243L943, 243L940, 243L936, 243L933, 243L929, 243L926, 243L922, 243L919, 243L915, 243L912, 243L908, 243L905, 243L901, 243L898, 243L894, 243L891, 243L887, 243L884, 243L880, 243L877, 243L873, 243L870, 243L866, 243L863, 243L859, 243L856, 243L852, 243L849, 243L845, 243L842, 243L838, 243L835, 243L831, 243L828, 243L824, 243L821, 243L817, 243L814, 243L810, 243L807, 243L803, 243L800, 243L796, 243L793, 243L789, 243L786, 243L782, 243L779, 243L775, 243L772, 243L768, 243L765, 243L761, 243L758, 243L754, 243L751, 243L747, 243L744, 243L740, 243L737, 243L733, 243L730, 243L726, 243L723, 243L719, 243L716, 243L712, 243L709, 243L705, 243L702, 243L698, 243L695, 243L691, 243L688, 243L684, 243L681, 243L677, 243L674, 243L670, 243L667, 243L663, 243L660, 243L656, 243L653, 243L649, 243L646, 243L642, 243L639, 243L635, 243L632, 243L628, 243L625, 243L621, 243L618, 243L614, 243L611, 243L607, 243L604, 243L600, 243L597, 243L593, 243L590, 243L586, 243L583, 243L579, 243L576, 243L572, 243L569, 243L565, 243L562, 243L558, 243L555, 243L551, 243L548, 243L544, 243L541, 243L537, 243L534, 243L530, 243L527, 243L523, 243L520, 243L516, 243L513, 243L509, 243L506, 243L502, 243L500, 243L500, 266" fill="hsl(var(--muted-foreground))" stroke="hsl(var(--background))" strokeWidth="1"/>
    </svg>
);


export function MapPin({ lat, lon, setLat, setLon }: MapPinProps) {
    const mapRef = useRef<HTMLDivElement>(null);

    const handleMapClick = (e: React.MouseEvent<HTMLDivElement>) => {
        if (mapRef.current) {
            const rect = mapRef.current.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;

            const longitude = ((x / rect.width) * 360) - 180;
            const latitude = 90 - ((y / rect.height) * 180);

            setLon(longitude.toFixed(4));
            setLat(latitude.toFixed(4));
        }
    };

    const pinX = (lon + 180) / 360 * 100;
    const pinY = (90 - lat) / 180 * 100;

    return (
        <div 
            ref={mapRef}
            className="w-full h-full bg-muted relative overflow-hidden cursor-pointer"
            onClick={handleMapClick}
        >
            <div className="absolute inset-0 opacity-30">
                <WorldMapSvg />
            </div>
            
            <div 
                className="absolute w-3 h-3 -translate-x-1/2 -translate-y-full" 
                style={{ left: `${pinX}%`, top: `${pinY}%`, transition: 'left 0.2s, top 0.2s' }}
            >
                 <svg viewBox="0 0 24 24" fill="hsl(var(--primary))" className="w-full h-full drop-shadow-lg">
                    <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
                </svg>
            </div>
        </div>
    );
}
